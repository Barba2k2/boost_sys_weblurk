name: Shorebird Patch

on:
  workflow_call:
    inputs:
      version:
        description: "Versão do patch"
        required: true
        type: string
      change_type:
        description: "Tipo de mudança"
        required: true
        type: string
    outputs:
      patch-created:
        description: "Patch foi criado"
        value: ${{ jobs.create-patch.outputs.patch-created }}
      target-release:
        description: "Release base do patch"
        value: ${{ jobs.create-patch.outputs.target-release }}
      patch-number:
        description: "Número do patch"
        value: ${{ jobs.create-patch.outputs.patch-number }}
    secrets:
      SHOREBIRD_TOKEN:
        required: true

jobs:
  create-patch:
    runs-on: windows-latest
    outputs:
      patch-created: ${{ steps.shorebird-patch.outputs.patch-created }}
      target-release: "latest"
      patch-number: ${{ steps.shorebird-patch.outputs.patch-number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          cache: true

      - name: Setup Shorebird
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true

      - name: Install Dependencies
        shell: powershell
        run: |
          flutter pub get

      - name: Create Shorebird Patch
        id: shorebird-patch
        shell: powershell
        run: |
          Write-Output "Criando patch Shorebird para Windows..."
          # AQUI ESTÁ A CORREÇÃO PRINCIPAL
          try {
            git config --system core.longpaths true
            
            # Usando --release-version=latest para simplificar
            $patchOutput = shorebird patch windows --release-version=latest --verbose 2>&1
            Write-Output "Output da criacao do patch:"
            $patchOutput | Write-Output
            
            if ($LASTEXITCODE -eq 0) {
              Write-Output "Patch Shorebird criado com sucesso!"
              echo "patch-created=true" >> $env:GITHUB_OUTPUT
              
              # A lógica para extrair o número do patch permanece a mesma
              $patchNumberMatch = $patchOutput | Select-String "Patch (\d+)" | Select-Object -First 1
              if ($patchNumberMatch) {
                $patchNumber = $patchNumberMatch.Matches[0].Groups[1].Value
                echo "patch-number=$patchNumber" >> $env:GITHUB_OUTPUT
                Write-Output "Numero do patch: $patchNumber"
              }
            } else {
              echo "patch-created=false" >> $env:GITHUB_OUTPUT
              throw "Shorebird patch falhou"
            }
          } catch {
            Write-Error "Erro durante criacao do patch: $_"
            echo "patch-created=false" >> $env:GITHUB_OUTPUT
            throw "Falha na criacao do patch Shorebird"
          }
        env:
          SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}

      # O passo de resumo continua útil
      - name: Summary
        shell: powershell
        if: always()
        run: |
          Write-Output ""
          Write-Output "RESUMO DO PATCH"
          Write-Output "=================="
          Write-Output "Versao: ${{ inputs.version }}"
          Write-Output "Release base: latest"
          Write-Output "Patch criado: ${{ steps.shorebird-patch.outputs.patch-created }}"
          Write-Output "Numero: ${{ steps.shorebird-patch.outputs.patch-number }}"
          Write-Output "Tipo: ${{ inputs.change_type }}"
          Write-Output "=================="
          if ("${{ steps.shorebird-patch.outputs.patch-created }}" -eq "true") {
            Write-Host "PATCH CRIADO COM SUCESSO!" -ForegroundColor Green
          } else {
            Write-Error "FALHA NA CRIAÇÃO DO PATCH. Verifique logs acima."
          }