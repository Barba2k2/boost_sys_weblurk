name: Shorebird Main Pipeline

on:
  push:
    branches:
      - "1.0.14+1"
      - "main"
      - "master"
    paths-ignore:
      - "README.md"
      - "docs/**"

  workflow_dispatch:
    inputs:
      force_run:
        description: "Forcar execucao da pipeline"
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write

env:
  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}

jobs:
  debug-trigger:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ github.token }}

      - name: Debug Pipeline Trigger
        shell: powershell
        run: |
          Write-Output "DEBUG: Pipeline foi disparada!"
          Write-Output "Branch: ${{ github.ref_name }}"
          Write-Output "Event: ${{ github.event_name }}"
          Write-Output "SHA: ${{ github.sha }}"
          Write-Output "Actor: ${{ github.actor }}"
          Write-Output "Repository: ${{ github.repository }}"
          Write-Output "Run ID: ${{ github.run_id }}"

          Write-Output "Verificando Git..."
          $gitWorking = $false
          try {
            git --version | Out-Null
            if ($LASTEXITCODE -eq 0) {
              Write-Output "Git: OK"
              $gitWorking = $true
            }
          } catch {
            Write-Output "Git: ERRO"
          }

          if ($gitWorking) {
            Write-Output "Testando git status..."
            try {
              git status --porcelain | Out-Null
              Write-Output "Git repository: OK"
            } catch {
              Write-Output "Git repository: PROBLEMA"
            }
          }

          Write-Output "Verificando estrutura..."
          if (Test-Path "pubspec.yaml") {
            Write-Output "pubspec.yaml: OK"
          } else {
            Write-Output "pubspec.yaml: NAO ENCONTRADO"
          }

          if (Test-Path "lib") {
            Write-Output "lib/: OK"
          } else {
            Write-Output "lib/: NAO ENCONTRADO"
          }

          Write-Output "Verificando secrets..."
          if ("${{ secrets.SHOREBIRD_TOKEN }}" -ne "") {
            Write-Output "SHOREBIRD_TOKEN: OK"
          } else {
            Write-Output "SHOREBIRD_TOKEN: NAO CONFIGURADO"
          }

          Write-Output "Debug concluido com sucesso!"

  analyze:
    needs: debug-trigger
    uses: ./.github/workflows/analyze-changes.yml
    with:
      branch_name: ${{ github.ref_name }}
    secrets:
      SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}

  shorebird-release:
    needs: analyze
    if: needs.analyze.outputs.action == 'release'
    uses: ./.github/workflows/shorebird-release.yml
    with:
      version: ${{ needs.analyze.outputs.new-version }}
      release_notes: ${{ needs.analyze.outputs.release-notes }}
    secrets:
      SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}

  shorebird-patch:
    needs: analyze
    if: needs.analyze.outputs.action == 'patch'
    uses: ./.github/workflows/shorebird-patch.yml
    with:
      version: ${{ needs.analyze.outputs.new-version }}
      change_type: ${{ needs.analyze.outputs.change-type }}
    secrets:
      SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}

  notify:
    needs: [analyze, shorebird-release, shorebird-patch]
    if: always()
    uses: ./.github/workflows/notify-results.yml
    with:
      action: ${{ needs.analyze.outputs.action }}
      version: ${{ needs.analyze.outputs.new-version }}
      change_type: ${{ needs.analyze.outputs.change-type }}
      release_success: ${{ needs.shorebird-release.result == 'success' }}
      patch_success: ${{ needs.shorebird-patch.result == 'success' }}
      version_updated: true
